<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
                        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
                        
<!-- 네임스페이스(사용영역) 설정 -->
<mapper namespace="com.euishoe.Review">
	
	<!-- 리뷰 작성  -->
	<insert id="createReview" parameterType="Map">		            
		INSERT INTO reviews 
		            (review_num, 
		             customer_id, 
		             product_num, 
		             review_title, 
		             review_content,
		             review_password,
		             review_score, 
		             review_isdeleted) 
		VALUES  (reviews_seq.NEXTVAL, 
		             #{customerId}, 
		             #{productNum}, 
		             #{reviewTitle}, 
		             #{reviewContent}, 
		             #{reviewPassword},
		             #{reviewScore}, 
		             'N')
	</insert>
	
		<!-- 리뷰 작성  -->
	<insert id="createReview2" parameterType="com.euishoe.reviews.dto.Review">		            
		INSERT INTO reviews 
		            (review_num, 
		             customer_id, 
		             product_num, 
		             review_title, 
		             review_content,
		             review_password,
		             review_score, 
		             review_isdeleted) 
		VALUES  (reviews_seq.NEXTVAL, 
		             #{customerId}, 
		             #{productNum}, 
		             #{reviewTitle}, 
		             #{reviewContent}, 
		             #{reviewPassword},
		             #{reviewScore}, 
		             'N')
	</insert>
	
	<delete id="deleteReview" parameterType="int">
		DELETE INTO reviews
		WHERE review_num = #{reviewNum}
	</delete>


	 <resultMap type="com.euishoe.products.dto.ProductInfo" id="ProductInfo">
		<result property="productNum" column="product_num"/>
    	<result property="productListNum" column="product_list_num"/>
    	<result property="productName" column="product_name"/>
    	<result property="productCost" column="product_cost"/>
    	<result property="productPrice" column="product_price"/>
    	<result property="productBriefInfomation" column="product_brief_information"/>
    	<result property="productManufacturer" column="product_manufacturer"/>
    	<result property="productReleaseDate" column="product_release_date"/>
    	<result property="productOrigin" column="product_origin"/>
    	<result property="productListPrice" column="product_list_price"/>
    	<result property="colorCode" column="color_code"/>
    	<result property="productHitcount" column="product_hitcount"/>
    	<result property="productBody" column="product_body"/>
    	<result property="productShoulder" column="product_shoulder"/>
    	<result property="productArm" column="product_arm"/>
    	<result property="productLeg" column="product_leg"/>
    	<result property="productSeason" column="product_season"/>
    	<result property="productFabric" column="product_fabric"/>
    	<result property="productTpo" column="product_tpo"/>
	</resultMap> 
	
	<resultMap type="com.euishoe.reviews.dto.Review" id="Review">
		<result property="reviewNum" column="review_num"/>
    	<result property="customerId" column="customer_id"/>
    	<result property="productNum" column="product_num"/>
    	<result property="reviewTitle" column="review_title"/>
   		<result property="reviewContent" column="review_content"/>
   		<result property="reviewPassword" column="review_password"/>
   		<result property="reviewScore" column="review_score"/>
   		<result property="reviewIsDeleted" column="review_isdeleted"/>
		<collection property="productInfo" resultMap="ProductInfo"/>
	</resultMap>
	
<!-- 해당 제품의 모든 리뷰 출력  -->
	<select id="selectAllReview" parameterType="int" resultMap="Review">
		SELECT review.customer_id,
		       		review.review_title,
		      	 	review.review_content,
		       		review.review_password,
		      		review.review_score
		FROM  	reviews review
		      		JOIN product_infos pi
		     		on review.product_num = pi.product_num
		WHERE pi.product_num = #{product_num}
	</select>


	<!-- 자기가 쓴 리뷰 조회 -->
	<select id="selectReviewUserById" parameterType="Map" resultMap="Review">
		SELECT review.customer_id,
			        review.review_title,
			        review.review_content,
			        review.review_password,
			        review.review_score
		FROM  	reviews review
		      		JOIN product_infos pi
		      		on review.product_num = pi.product_num
		WHERE review.product_num = #{productNum} AND review.customer_id = #{customerId}
	</select>
	
	<!-- 별점으로 조회 -->
	<select id="selectReviewByScore"  parameterType="Map" resultMap="Review">
		SELECT review.customer_id,
			       review.review_title,
			       review.review_content,
			       review.review_password,
			       review.review_score
		FROM   reviews review
		       	   JOIN product_infos pi
		       	   on review.product_num = pi.product_num
		WHERE  pi.product_num = #{productNum} AND review.review_score = #{reviewScore}
	</select>
	
	
</mapper>